#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#

#define BASE 	0
#define MEDR 	1
#define NAVR 	2
#define MOUS 	3
#define SYMB 	4
#define NUM  	5
#define FUNC 	6
#define BLE  	7

/ {
	behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping_term_ms = <175>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
		hr: hold_reset {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping_term_ms = <500>;
            flavor = "balanced";
            bindings = <&reset>, <&trans>;
        }
    };
	keymap {
		compatible = "zmk,keymap";

		default_layer {
// ------------------------------------------------------------------------------------------------------------
// | NOP |  W  |  E  |  R  |  T  | NOP |                  | NOP |  Y   |  U    |  I    |  O   |  NOP |
// |  Q  |  S  |  D  |  F  |  G  | NOP |                  | NOP |  H   |  J    |  K    |  L   |   P  |
// |  A	 |  X  |  C  |  V  |  B  | NOP |                  | NOP |  N   |  M    |  ,    |  .   |   '  |
// |  Z	 | NOP | NOP | ESC | SPC | TAB |                  | ENT | BSPC |  DEL  |  NOP  |  NOP |  /   |
			bindings = <
&hr 		&kp W   	&kp E   	&kp R    	 &kp T   	  &mo BLE			&mo BLE			&kp Y			&kp U		 	&kp I     		&kp O			&hr
&kp Q		&hm LALT S	&hm LCTL D	&hm LSFT F	 &kp G   	  &trans			&trans 			&kp H			&hm LSFT J	 	&hm LCTL K		&hm LALT L		&kp P
&hm LGUI A 	&hm RALT X  &kp C   	&kp V    	 &kp B   	  &trans			&trans 			&kp N			&kp M		 	&kp CMMA  		&hm RALT DOT	&hm LGUI QUOT
&kp Z 		&trans		&trans  	&lt MEDR ESC &lt NAVR SPC &lt MOUS			&lt SYMB RET	&lt NUM BKSP	&lt FUNC DEL	&trans  		&trans			&kp FSLH
			>;
		};

		media_layer {
// ------------------------------------------------------------------------------------------------------------
// |     |     |     |      |      |      |                   |      |      |      |      |       |       |
// |     |     |     |      |      |      |                   |      |      | PREV | VOL- | VOL+  | NEXT  |
// |     |     |     |      |      |      |                   |      |      |      |      |       |       |
// |     |     |     |      |      |      |                   | STOP | PLAY | MUTE |      |       |       |
			bindings = <
&trans &trans &trans &trans &trans &trans					&trans 		&trans 		&trans  	&trans 		&trans 		&trans
&trans &trans &trans &trans &trans &trans					&trans    	&trans		&cp M_PREV 	&cp M_VOLD	&cp M_VOLU  &cp M_NEXT
&trans &trans &trans &trans &trans &trans					&trans   	&trans  	&trans   	&trans    	&trans  	&trans
&trans &trans &trans &trans &trans &trans					&cp M_STOP	&cp M_PLAY	&cp M_MUTE 	&trans		&trans  	&trans
			>;
		};

		navigation_layer {
// ------------------------------------------------------------------------------------------------------------
// |     |     |     |      |      |      |                   |       |      | UNDO | CUT  | COPY | PASTE |
// |     |     |     |      |      |      |                   |       | CAPS | LEFT | DOWN | UP   | RIGHT |
// |     |     |     |      |      |      |                   |       | INS  | HOME | PGDN | PGUP | END   |
// |     |     |     |      |      |      |                   |       | ENT  | BSPC | DEL  |      |       |
			bindings = <
&trans &trans &trans &trans &trans &trans					&trans		&trans 		&kp UNDO	&kp CUT  	&kp COPY 	&kp PSTE
&trans &trans &trans &trans &trans &trans					&trans		&kp CLCK   	&kp LARW 	&kp DARW	&kp UARW  	&kp RARW
&trans &trans &trans &trans &trans &trans					&trans		&kp INS   	&kp HOME  	&kp PGDN   	&kp PGUP   	&kp END
&trans &trans &trans &trans &trans &trans					&kp RET		&kp BKSP	&kp DEL 	&trans		&trans		&trans
			>;
		};

// ------------------------------------------------------------------------------------------------------------
// | ~   |  !  |  @  | "#"  |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |  DEL  |
// | DEL |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |   _   |   +   |  {   |   }   |  "|"  |
// |     |  F7 |  F8 |  F9  |  F10 |  F11 |                   |  F12 |  "#"  |   \   |      |       |       |
// |     |     |     |      |      |      |                   |      |       |  NEXT | VOL- | VOL+  |  PLAY |
			bindings = <
&kp TILD   &kp BANG   &kp ATSN     &kp HASH     &kp CURU     &kp PRCT                     &kp CRRT  &kp AMPS  &kp KMLT   &kp LPRN  &kp RPRN  &kp DEL
&kp DEL    &kp F1     &kp F2       &kp F3       &kp F4       &kp F5       				  &kp F6    &kp MINUS &kp EQL   &kp LCUR  &kp RCUR  &kp PIPE
&trans  &kp F7     &kp F8       &kp F9       &kp F10      &kp F11                      &kp F12   &kp HASH  &kp BSLH   &trans    &trans    &trans
&trans     &trans     &trans       &trans       &trans       &trans    			      	  &trans    &trans 	  &cp M_NEXT &kp VOLD  &kp VOLU  &cp M_PLAY
			>;
		};

		raise_layer {
// ------------------------------------------------------------------------------------------------------------
// | `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0  |  DEL  |
// | DEL |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |   -   |   =   |  [   |   ]  |   \   |
// |     |  F7 |  F8 |  F9  |  F10 |  F11 |                   |  F12 |  "#"  |   \   |      |      |       |
// |     |     |     |      |      |      |                   |      |       |  NEXT | VOL- | VOL+ |  PLAY |
			bindings = <
&kp GRAV &kp NUM_1 &kp NUM_2 &kp NUM_3 &kp NUM_4 &kp NUM_5                    &kp NUM_6 &kp NUM_7 &kp NUM_8  &kp NUM_9 &kp NUM_0 &kp DEL
&kp DEL    &kp F1     &kp F2       &kp F3       &kp F4       &kp F5       	  &kp F6    &kp MINUS &kp EQL    &kp LBKT  &kp RBKT  &kp BSLH
&trans  &kp F7     &kp F8       &kp F9       &kp F10      &kp F11          &kp F12   &kp HASH  &kp BSLH   &trans    &trans    &trans
&trans     &trans     &trans       &trans       &trans       &trans    		  &trans    &trans 	  &cp M_NEXT &kp VOLD  &kp VOLU  &cp M_PLAY
			>;
		};
	};
};
